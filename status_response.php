<head>
<style type="text/css">
.centercontainer {
	/* Internet Explorer 10 */
	display:-ms-flexbox;
	-ms-flex-pack:center;
	-ms-flex-align:center;

	/* Firefox */
	display:-moz-box;
	-moz-box-pack:center;
	-moz-box-align:center;

	/* Safari, Opera, and Chrome */
	/*display:-webkit-box;
	-webkit-box-pack:center;
	-webkit-box-align:center;*/

	/* W3C */
	display:box;
	box-pack:center;
	box-align:center;

	display: inline-block;


}
.progress-label {
    float: left;
    margin-left:45%;
    margin-top: 5px;
    font-weight: bold;
    text-shadow: 1px 1px 0 #fff;
}

table
{
//border: 1px solid #000;
}
th
{
border-bottom: 1px solid #000;
}
th, td
{
/*border:1px solid black;*/
padding:5px;
}

.status
{
	border-radius: 100%;
	margin:0px 10px;
	border: 1px solid black;
	width: 15px;
	height: 15px;
	float:center;
}

.queued
{
	background: yellow;
}

.running
{
	background:green;
}

.failed
{
	background:red;
}

.key
{
	float: left;
	width: 15px;
	text-align: left;
	margin: 2px 2px;
	margin-left:10px;
	display: inline-block;
}

.keytext
{
	width: 80px;
	float: left;
	text-align: left;
	margin: 2px 2px;
	display: inline-block;
	font-size:14px;
	font:Times;
}

</style>

<meta http-equiv="refresh" content="15">

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.0/themes/smoothness/jquery-ui.css">
<script src='//code.jquery.com/jquery-1.10.2.js'></script>
<script src="//code.jquery.com/ui/1.11.0/jquery-ui.js"></script>

</head>

<body>

<center>
<br><br>

<?php

$ini = parse_ini_file("../config.ini.php", true);
$admin = $ini['login']['admin'];
$def_path = $ini['login']['default'];
$subdirectories = $ini['filepaths']['subdirectories'];

session_start();
$token = $_SESSION['access_token'];

if ( (isset($_SESSION['LAST_ACTIVITY']) && (time() - $_SESSION['LAST_ACTIVITY'] > 1800)) || 
   (isset($_SESSION['SESSION_TIMEOUT']) && (time() - $_SESSION['SESSION_TIMEOUT'] > 5400)) ) {
    // last request was more than 30 minutes ago
    session_unset();     // unset $_SESSION variable for the run-time      
    session_destroy();   // destroy session data in storage                 
}


if(empty($_SESSION['user_name']) && !($_SESSION['user_is_logged_in']))
{
  header('Location: placeholder_response.html');
}

$scripts = scandir("$subdirectories/bash_scripts");

#$fRNAkrunning = exec("ps aux | grep -E '[r]un_(.*)\.(mapcount|diffexp)\.sh' ", $outputs);
$fRNAkrunning = exec("ps aux | grep -E '[r]un_(.*)\.(mapcount|diffexp)\.sh' ", $outputsToFilter);

###Run the agave API query
// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
$ch = curl_init();

curl_setopt($ch, CURLOPT_URL, "https://agave.iplantc.org/jobs/v2?prety=true");
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");


$headers = array();
$headers[] = "Authorization: Bearer $token";
curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

$result = curl_exec($ch);
if (curl_errno($ch)) {
    echo 'Error:' . curl_error($ch);
}
curl_close ($ch);

echo $result . "!!";
#echo "is the result !!!";

$obj = json_decode($result, TRUE);
echo $obj . "is the object !!! \n \n";

$statusArray = array();

$theStringOfResults = "";
for($i=0; $i<count($obj["result"]); $i++)
{
//        echo "Rating is " . $obj["result"][$i]["name"];
        $file = "";
        $file = $obj["result"][$i]["id"];
	echo $file . " is the file !!! \n \n";
	$status = $obj["result"][$i]["status"];
	$toAddToString = $file .  " " . $status;
        echo $file . " is the file about to added and $status is the status !!! \n \n";
        echo $file . " is the file !!! \n \n";
//        array_push($filesFromDataStore, $file);

// . " and the excerpt is " . $obj['reviews'][$i]["excerpt"] . "<BR>";
	$theStringOfResults .= "\n" . $toAddToString;
	array_push($statusArray, $toAddToString);
}

echo $theStringOfResults . " is the string of results !!! \n \n";
echo json_encode($statusArray) . "is the status array !!! \n \n";
####Now, bring over the code from the Agave stuff



$outputs = array();

foreach($outputsToFilter as $proc)
{
    $array = preg_split('/\s+/', $proc);
    echo json_encode($array) . "is the json_encoded array !!";
    #echo $array[7] . "is array at 7 !! \n";
    #echo date('d,D,j') . "is date!!";
    #pregmatch(":",$array[7], $time);
    #echo "$time is time !!";

    if(($array[7] == 'S+'))
    {
//	echo "we have array[7] to be what we want it to be !!! \n";
	array_push($outputs,$proc);
    
    }

}


$outputCounts = count($outputs);
//echo json_encode($outputs) + "this is the json_encoded outputs !!! \n";
//echo $outputCounts . "this is the count of outputs !!! \n";

$statusArray = preg_split('/\n+/', $theStringOfResults);
echo json_encode($array) . " is the array !!! \n";


if ( empty($fRNAkrunning) && count($outputs) == 0 && empty($scripts))
{
	echo "No processes currently queued or running!<br>";
}


//if (count($outputs) == 0)
//{
//	echo "No processes currently queued or running!<br>";
//}

else {

	echo "<table>";
	echo "<tr>";
	//echo "<th>ID</th><th>Type</th><th>Elapsed</th><th>Status</th>";
	echo "<th>ID</th><th>Status</th>";
	echo "</tr>";
	#if (!empty($fRNAkrunning) && count($outputs) > 0)
	if(count($statusArray) > 0);
	{
		echo "this is a test to see where failing !! \n";
		//foreach($outputs as $proc)
		foreach($statusArray as $proc)
		{
			
			#split procs at tabs
			$array = preg_split('/\s+/', $proc);
			
			#echo json_encode($proc) . "is proc!!! \n";
			#echo json_encode($array) . "is array !! \n";
			
			echo json_encode($proc) . "is proc!!! \n";
			//preg_match("/(run_(.*)\.(.*)\.sh)/",$proc,$match);
			//preg_match("/(run_(.*)\.(.*)\.sh)/",$proc,$match);
			//preg_match("/(run_(.*)\.(.*)\.sh)/",$proc,$runOrNo);
			$file = $match[1];
#			echo "well we are running this at least !!! \n";
			//if($match[3] != '*')
			if($array[1] == "FINISHED") 
			#echo json_encode($proc) . "is proc";
			#echo json_encode($runOrNo) . "is run or no";
			#echo "is match at 3 !!";
			{
				$started = '';
				//exec("ps -eo etime,command | grep '$file' | grep -v grep | awk '{print $1}'", $started);
				#echo "<tr>";
				//$id = $match[2];
				$id = $array[0];
				$type = $match[3];
				echo $proc . " is the proc and we have finished !!! \n";
				echo "<td>$id</td><td>$type</td><td>$started[0]</td><td><div class='status running'></div></td></tr>";
				$pos = array_search($file, $scripts);
				unset($scripts[$pos]);
			}
			if($array[1] == "FAILED") 
                        #echo json_encode($proc) . "is proc";
                        #echo json_encode($runOrNo) . "is run or no";
                        #echo "is match at 3 !!";
                        {
				echo $proc . " is the proc and we have failed !!! \n \n";
                                $started = '';
                                //exec("ps -eo etime,command | grep '$file' | grep -v grep | awk '{print $1}'", $started);
                                #echo "<tr>";
                                //$id = $match[2];
				$id = $array[0];
                                $type = $match[3];
                                
                                echo "<td>$id</td><td>$type</td><td>$started[0]</td><td><div class='Status Failed'></div></td></tr>";
                                $pos = array_search($file, $scripts);
                                unset($scripts[$pos]);
                        }

		}
	}
	if( !empty($scripts) )
	{

		foreach ($scripts as $script)
		{
			if(($script != ".") and ($script != ".."))
			{
				preg_match("/(run_(.*)\.(.*)\.sh)/",$script,$match);
				if(count($match) > 0){
					$id = $match[2];
					$type = $match[3];
					echo "is the id !!!";
					if($id != '')
					{
						echo "<tr>";
						echo "<td>$id</td><td>$type</td><td>N/A</td><td><div class='status queued currently '></div></td></tr>";
					}
				}
			}
		}
	}

}

echo "</table>";

?>

<!--
#########################
# fRNAkenstein Reloader #
#########################
-->

<script language="javascript">
function reloader()
{
        /* Reload window */
        parent.location.reload();
        /* Set iFrame to empty */
        window.location.assign("about:blank");

}
</script>


<br>
<a href="" onclick="return reloader(event)"><h3 style="opacity:0.3;">Refresh to check status again</h2></a><br>
</div>


</center>
</div>
</body>
